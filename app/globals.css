@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #ffffff;
  --foreground: #171717;
}
::-webkit-scrollbar {
  display: none;
}
@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: Arial, Helvetica, sans-serif;
  scrollbar-width: none;
}
.theme-container {
  @apply max-w-[1400px] mx-auto px-2;
}
input{
  cursor: none;
}
textarea{
  cursor: none;
}
@layer base{
  :root{
    cursor: none
  }
  .container{
    @apply max-w-[1400px] mx-auto px-2
  }
};
/* body {
  color: rgb(var(--foreground-rgb));
  background-color: #0d1224;
} */

* {
  cursor: none;
}

.custom-cursor {
  position: fixed;
  top: 0;
  left: 0;
  -webkit-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  will-change: width, height, transform, border;
  z-index: 999;
  pointer-events: none;
}

.cursor-hover-animation {
  overflow: hidden;
}
.cursor-hover-animation::after {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  transform: translateX(-100%);
  background-image: linear-gradient(
    90deg,
    rgba(255, 255, 255, 0) 0,
    #feff8620 20%,
    #feff8650 70%,
    rgba(255, 255, 255, 0)
  );
  -webkit-animation: shimmer 1500ms infinite;
  animation: shimmer 1500ms infinite;
  content: "";
}
@-webkit-keyframes shimmer {
  100% {
    transform: translateX(100%);
  }
}
@keyframes shimmer {
  100% {
    transform: translateX(100%);
  }
}

button {
  cursor: none;
}

.btnWithSlider {
  --button-text-color: white;
  --button-text-color-hover: white;
  --border-color: #7d8082;
  --button-background-color: #ece8e1;
  --highlight-color: #e95420;

  position: relative;
  margin-bottom: 20px;
  text-transform: uppercase;
  font-weight: bold;
  font-size: 14px;
  transition: all 0.15s ease;
}

.btnWithSlider::before,
.btnWithSlider::after {
  content: "";
  display: block;
  position: absolute;
  right: 0;
  left: 0;
  height: calc(50% - 5px);
  border: 1px solid var(--border-color);
  transition: all 0.15s ease;
}

.btnWithSlider::before {
  top: 0;
  border-bottom-width: 0;
}

.btnWithSlider::after {
  bottom: 0;
  border-top-width: 0;
}

.btnWithSlider:active,
.btnWithSlider:focus {
  outline: none;
}

.btnWithSlider:active::before,
.btnWithSlider:active::after {
  right: 3px;
  left: 3px;
}

.btnWithSlider:active::before {
  top: 3px;
}

.btnWithSlider:active::after {
  bottom: 3px;
}

.sliderWrapper {
  position: relative;
  display: block;
  padding: 10px 30px;
  overflow: hidden;
  box-shadow: inset 0px 0px 0px 1px transparent;
}

.btnSlider {
  display: block;
  position: absolute;
  top: 0;
  bottom: -1px;
  left: -8px;
  width: 0;
  background-color: var(--highlight-color);
  transform: skew(-15deg);
  transition: all 1s ease;
}

.sliderContent {
  position: relative;
}

.btnWithSlider:hover {
  color: white;
}

.btnWithSlider:hover .btnSlider {
  width: calc(100% + 15px);
}

.Arialic_Hollow {
  font-family: "Arialic Hollow";
}

.custom-scroll-bar-y {
  overflow-y: auto;
  scrollbar-width: thin;
  scrollbar-color: transparent transparent;
}

/* Chrome, Edge, and Safari */
.custom-scroll-bar-y::-webkit-scrollbar {
  width: 100%;
  height: 4px;
}

.custom-scroll-bar-y::-webkit-scrollbar-track {
  background: transparent;
  border-radius: 8px;
}

.custom-scroll-bar-y::-webkit-scrollbar-thumb {
  background-color: gray;
  border-radius: 1px;
}

.custom-scroll-bar-x {
  overflow-x: auto;
  scrollbar-width: thin;
  scrollbar-color: transparent transparent;
}

/* Chrome, Edge, and Safari */
.custom-scroll-bar-x::-webkit-scrollbar {
  width: 6px;
  height: 100%;
}

.custom-scroll-bar-x::-webkit-scrollbar-track {
  background: transparent;
  border-radius: 8px;
}

.custom-scroll-bar-x::-webkit-scrollbar-thumb {
  background-color: gray;
  border-radius: 1px;
}

/* Glow Card Css */
.glow-container {
  --spread: 60;
}

.glow-card {
  --active: 0.15;
  --start: 0;
}

.glow-card:is(:hover, :focus-visible) {
  z-index: 2;
}

.glows {
  pointer-events: none;
  position: absolute;
  inset: 0;
  filter: blur(calc(var(--blur) * 1px));
}

.glows::after,
.glows::before {
  --alpha: 0;
  content: "";
  background: conic-gradient(
    from 180deg at 50% 70%,
    #f626af 0deg,
    #8228ec 72.0000010728836deg,
    #f626af 144.0000021457672deg,
    #0025ba 216.00000858306885deg,
    #f626af 288.0000042915344deg,
    #fafafa 1turn
  );
  background-attachment: fixed;
  position: absolute;
  inset: -5px;
  border: 8px solid transparent;
  border-radius: 12px;
  mask: linear-gradient(#0000, #0000),
    conic-gradient(
      from calc((var(--start) - (var(--spread) * 0.5)) * 1deg),
      #000 0deg,
      #fff,
      #0000 calc(var(--spread) * 1deg)
    );
  mask-composite: intersect;
  mask-clip: padding-box, border-box;
  opacity: var(--active);
  transition: opacity 1s;
}

.glow-card::before {
  position: absolute;
  inset: 0;
  border: 2px solid transparent;
  content: "";
  border-radius: 12px;
  pointer-events: none;
  background: #84738c;
  background-attachment: fixed;
  border-radius: 12px;
  mask: linear-gradient(#0000, #0000),
    conic-gradient(
      from
        calc(
          ((var(--start) + (var(--spread) * 0.25)) - (var(--spread) * 1.5)) *
            1deg
        ),
      #ffffff26 0deg,
      white,
      #ffffff26 calc(var(--spread) * 2.5deg)
    );
  mask-clip: padding-box, border-box;
  mask-composite: intersect;
  opacity: var(--active);
  transition: opacity 1s;
}

.glow-card::after {
  --bg-size: 100%;
  content: "";
  pointer-events: none;
  position: absolute;
  background: conic-gradient(
    from 180deg at 50% 70%,
    #f626af 0deg,
    #8228ec 72.0000010728836deg,
    #f626af 144.0000021457672deg,
    #0025ba 216.00000858306885deg,
    #f626af 288.0000042915344deg,
    #fafafa 1turn
  );
  background-attachment: fixed;
  border-radius: 12px;
  opacity: var(--active, 0);
  transition: opacity 1s;
  --alpha: 0;
  inset: 0;
  border: 2px solid transparent;
  mask: linear-gradient(#0000, #0000),
    conic-gradient(
      from
        calc(
          ((var(--start) + (var(--spread) * 0.25)) - (var(--spread) * 0.5)) *
            1deg
        ),
      #0000 0deg,
      #fff,
      #0000 calc(var(--spread) * 0.5deg)
    );
  filter: brightness(1.5);
  mask-clip: padding-box, border-box;
  mask-composite: intersect;
}
